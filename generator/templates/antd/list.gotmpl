{{ $title := .RootPackage }}
{{ $package := .Package }}
import React, { useRef } from 'react';
import { message, Popconfirm, Tag } from 'antd';
import { FormattedMessage } from 'umi';
import type { ActionType } from '@ant-design/pro-table';
import type { ProColumns } from '@ant-design/pro-table';
import moment from 'moment';
import { useIntl } from 'umi';
import ListTable from '@/pages/transaction/_component/listTable';

import { {{ camelize .Name }} } from './service';
import {{ print $package "Columns" }} from './columns';
import { {{ print $package }} } from './data';

type {{ $package }}Props = {
  params?: Record<any, any>;
};
const {{ .Name }}: React.FC<{{ $package }}Props> = (props) => {
  const actionRef = useRef<ActionType>();
  const intl = useIntl();
  const request = async (params: Record<string, any>) => {
    const res = await {{ camelize (trimPrefix (humanize .Name) .PackageAlias) }}(params);
    if (res === null) {
      return {
        data: [],
        success: false,
        total: 0,
      };
    }
    return {
      data: res.records,
      success: true,
      total: res.totalRecord,
    };
  };
  const { params } = props;
  /* const delTask = async (ids: number[]) => {
    const result = await deleteTask(ids);
    if (!isPostFailed(result)) {
      message.success(intl.formatMessage({ id: `common.delete.success` }));
      actionRef.current?.reload();
    }
  };
  const restTask = async (ids: number[]) => {
    const result = await restoreTask(ids);
    if (!isPostFailed(result)) {
      message.success(intl.formatMessage({ id: `common.restore.success` }));
      actionRef.current?.reload();
    }
  }; */

  const columns: ProColumns<{{ $package }}>[] = [
    /*{
      title: <FormattedMessage id="pages.searchTable.titleOption" defaultMessage="操作" />,
      valueType: 'option',
      render: (___, record) => [
        !record.deletedAt ? (
          <Popconfirm
            key="delete"
            title={<FormattedMessage id="common.delete.confirmation" defaultMessage="确认删除?" />}
            onConfirm={() => delTask([record.id])}
            okText={<FormattedMessage id="common.delete" defaultMessage="删除" />}
          >
            <a>
              <FormattedMessage id="common.delete" defaultMessage="删除" />
            </a>
          </Popconfirm>
        ) : (
          <Popconfirm
                  key="delete"
                  title={<FormattedMessage id="common.restore.confirmation" defaultMessage="确认恢复?" />}
          onConfirm={() => restTask([record.id])}
          okText={<FormattedMessage id="common.restore" defaultMessage="恢复" />}
          >
          <a>
            <FormattedMessage id="common.restore" defaultMessage="恢复" />
          </a>
          </Popconfirm>
        ),
      ],
    },*/
  ];

  const columnsStateMap = {};

  return (
    <ListTable
      rowKey={`id`}
      columns={{ print "{" $package "Columns" "}" }}
      request={request}
      actionRef={actionRef}
      params={params}
      columnsStateMap={columnsStateMap}
    />
  );
};
export default {{ .Name }};
